# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import emp_pb2 as employee__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EmployeeManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getEmployee = channel.unary_unary(
                '/EmployeeManagement/getEmployee',
                request_serializer=employee__pb2.EmployeeID.SerializeToString,
                response_deserializer=employee__pb2.Employee.FromString,
                )
        self.listEmployees = channel.unary_stream(
                '/EmployeeManagement/listEmployees',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=employee__pb2.Employee.FromString,
                )
        self.setEmployee = channel.unary_unary(
                '/EmployeeManagement/setEmployee',
                request_serializer=employee__pb2.Employee.SerializeToString,
                response_deserializer=employee__pb2.EmployeeID.FromString,
                )
        self.updateEmployee = channel.unary_unary(
                '/EmployeeManagement/updateEmployee',
                request_serializer=employee__pb2.Employee.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.partialUpdate = channel.unary_unary(
                '/EmployeeManagement/partialUpdate',
                request_serializer=employee__pb2.UpdateEmpRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.deleteEmployee = channel.unary_unary(
                '/EmployeeManagement/deleteEmployee',
                request_serializer=employee__pb2.EmployeeID.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class EmployeeManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getEmployee(self, request, context):
        """get the Employee details by providing the employee ID
        Returns Status.NOT_FOUND if the ID doesn't match any Employee
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listEmployees(self, request, context):
        """List all the employees. It taks empty request type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setEmployee(self, request, context):
        """Create an emplyee by providing the Employee Details and returns the Employee ID
        Returns Status.INTERNAL if the Employee is not able to create
        Reutrns Status.AlreadyExists if the id already exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateEmployee(self, request, context):
        """Update an Employee by providing all the inforation again and returns empty
        Returns Status.NOT_FOUND if the ID doesn't match any Employee
        Returns Status.INTERNAL if the Employee is not able to update
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def partialUpdate(self, request, context):
        """Updates only the field we mention while calling this RPC
        Returns Status.NOT_FOUND if the ID doesn't match any Employee
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteEmployee(self, request, context):
        """Delete the Employee by providing the Employee ID and empty response is returned
        Returns Status.NOT_FOUND if the ID doesn't match any Employee
        Returns Status.INTERNAL if the Employee is not able to delete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmployeeManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.getEmployee,
                    request_deserializer=employee__pb2.EmployeeID.FromString,
                    response_serializer=employee__pb2.Employee.SerializeToString,
            ),
            'listEmployees': grpc.unary_stream_rpc_method_handler(
                    servicer.listEmployees,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=employee__pb2.Employee.SerializeToString,
            ),
            'setEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.setEmployee,
                    request_deserializer=employee__pb2.Employee.FromString,
                    response_serializer=employee__pb2.EmployeeID.SerializeToString,
            ),
            'updateEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.updateEmployee,
                    request_deserializer=employee__pb2.Employee.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'partialUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.partialUpdate,
                    request_deserializer=employee__pb2.UpdateEmpRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteEmployee,
                    request_deserializer=employee__pb2.EmployeeID.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'EmployeeManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmployeeManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeManagement/getEmployee',
            employee__pb2.EmployeeID.SerializeToString,
            employee__pb2.Employee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listEmployees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/EmployeeManagement/listEmployees',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            employee__pb2.Employee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeManagement/setEmployee',
            employee__pb2.Employee.SerializeToString,
            employee__pb2.EmployeeID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeManagement/updateEmployee',
            employee__pb2.Employee.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def partialUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeManagement/partialUpdate',
            employee__pb2.UpdateEmpRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeeManagement/deleteEmployee',
            employee__pb2.EmployeeID.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
